<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.betty</groupId>
	<artifactId>betty-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>betty</name>

	<modules>
		<module>betty-common</module>
		<module>betty-server</module>
		<module>betty-report</module>
		<module>betty-example</module>
		<module>betty-kilim</module>
<!--     	<module>betty-all</module> -->
  </modules>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
    	<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<skipTests>true</skipTests>
		<project.build.os/>
		<!-- native support -->
		<native.compile.required>false</native.compile.required>
		<!-- kilim support -->
		<kilim.weave.required>false</kilim.weave.required>
		<kilim.includes>.</kilim.includes>
		<kilim.excludes>ConnectorCreateRule</kilim.excludes>
		
		<tools.build.app>true</tools.build.app>
		<!-- application args -->
		<java.jvm.args>-Xms512m -Xmx2048m</java.jvm.args>
		<java.app.args/>
		
		<!-- ant dependencies version -->
		<ant.version>1.9.9</ant.version>
		<ant.launcher.version>1.9.9</ant.launcher.version>
		<ant.contrib.version>1.0b3</ant.contrib.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- https://mvnrepository.com/artifact/commons-digester/commons-digester -->
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>2.1</version>
			</dependency>
			
			<dependency>
			  <groupId>com.google.inject</groupId>
			  <artifactId>guice</artifactId>
			  <version>4.2.0</version>
			</dependency>

			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>2.6.1</version>
			</dependency>

			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>3.4.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<version>2.11.1</version>
				<artifactId>log4j-core</artifactId>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>2.11.1</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>4.1.29.Final</version>
			</dependency>

			<dependency>
				<groupId>org.db4j</groupId>
				<artifactId>kilim</artifactId>
				<version>2.0.0-26</version>
<!-- 				<version>1.0.7</version> -->
			</dependency>
			
			<dependency>
			    <groupId>org.apache.ant</groupId>
			    <artifactId>ant</artifactId>
			    <version>${ant.version}</version>
			</dependency>
		
		</dependencies>

	</dependencyManagement>


	<build>
		<directory>${project.basedir}/target${project.build.os}</directory>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant</artifactId>
							<version>${ant.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-launcher</artifactId>
							<version>${ant.launcher.version}</version>
						</dependency>
						<dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>${ant.contrib.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>kilim-weave</id>
							<phase>prepare-package</phase>
							<configuration>
								<!-- if kilim weaving is enabled -->
								<target if="${kilim.weave.required}">
									<java classname="kilim.tools.Weaver" fork="yes" failonerror="true">
										<classpath refid="maven.compile.classpath"/>
										<arg value="-d"/>
										<arg value="${project.build.outputDirectory}"/>
										<arg value="-x"/>
										<arg value="${kilim.excludes}"/>
										<arg line="${kilim.includes}" prefix="${project.build.outputDirectory}/"/>
									</java>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
						<execution>
							<id>kilim-weave-jar</id>
							<phase>prepare-package</phase>
							<configuration>
								<!-- if kilim weaving is enabled -->
								<target if="${kilim.weave.required}">
									<taskdef resource="net/sf/antcontrib/antlib.xml"/>
									<propertyselector property="betty.framework.jarfiles" match="^(io.betty:[^:]+:jar(?::[^:]+)?)$" select="\1"/>
									<for list="${betty.framework.jarfiles}" param="betty.framework.jarfile">
										<sequential>
											<basename property="@{betty.framework.jarfile}_filename" file="${@{betty.framework.jarfile}}"/>
											<unzip src="${@{betty.framework.jarfile}}" dest="${project.build.directory}/${@{betty.framework.jarfile}_filename}.dir"/>
											<java classname="kilim.tools.Weaver" fork="yes" failonerror="true">
												<classpath refid="maven.compile.classpath"/>
												<arg value="-d"/>
												<arg value="${project.build.directory}/${@{betty.framework.jarfile}_filename}.dir"/>
												<arg value="-x"/>
												<arg value="${kilim.excludes}"/>
												<arg line="." prefix="${project.build.directory}/${@{betty.framework.jarfile}_filename}.dir/"/>
											</java>
											<jar jarfile="${project.build.directory}/${@{betty.framework.jarfile}_filename}" basedir="${project.build.directory}/${@{betty.framework.jarfile}_filename}.dir"/>
										</sequential>
									</for>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
						<execution>
							<id>build-app-dir</id>
							<phase>package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target if="${tools.build.app}">
									<taskdef resource="net/sf/antcontrib/antlib.xml"/>
									<condition property="build.package.avilable">
										<and>
											<contains string="${os.name}" substring="Linux"/>
											<not>
											<equals arg1="${project.artifactId}" arg2="betty-parent"/>
											</not>
										</and>
									</condition>
									<if>
										<equals arg1="true" arg2="${build.package.avilable}"/>
										<then>
											<taskdef name="BettyCopyTask" classname="io.betty.ant.tools.BettyCopyTask" classpath="${project.build.directory}/classes:${io.betty:betty-common:jar}:${org.apache.ant:ant:jar}"/>
											<property name="ref.maven.compile.classpath" refid="maven.compile.classpath"/>
											<property name="app.dir" value="${project.basedir}"/>
											<mkdir dir="${app.dir}"/>
											<mkdir dir="${app.dir}/bin"/>
											<mkdir dir="${app.dir}/lib"/>
											<mkdir dir="${app.dir}/conf"/>
											<mkdir dir="${app.dir}/logs"/>
											<mkdir dir="${app.dir}/tmp"/>
											<for list="${ref.maven.compile.classpath}" delimiter=":" param="jarpath">
												<sequential>
													<if>
														<contains string="@{jarpath}" substring=".jar"/>
														<then>
															<basename property="@{jarpath}_filename" file="@{jarpath}"/>
															<available property="exist.weave.@{jarpath}" file="${@{jarpath}_filename}" filepath="${project.build.directory}"/>
															<if>
																<equals arg1="${exist.weave.@{jarpath}}" arg2="true"/>
																<then>
																	<BettyCopyTask file="${project.build.directory}/${@{jarpath}_filename}" todir="${app.dir}/lib"/>
																</then>
																<else>
																	<BettyCopyTask file="@{jarpath}" todir="${app.dir}/lib"/>
																</else>
															</if>
														</then>
													</if>
												</sequential>
											</for>
											<BettyCopyTask file="${project.build.directory}/${project.artifactId}-${project.version}.jar" todir="${app.dir}/lib"/>
										</then>
									</if>
								</target>
							</configuration>
						</execution>
						<execution>
							<id>build-app-scripts</id>
							<phase>package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target if="${tools.build.app}">
									<taskdef resource="net/sf/antcontrib/antlib.xml"/>
									<condition property="build.package.avilable">
										<and>
											<contains string="${os.name}" substring="Linux"/>
											<not>
											<equals arg1="${project.artifactId}" arg2="betty-parent"/>
											</not>
										</and>
									</condition>
									<if>
										<equals arg1="true" arg2="${build.package.avilable}"/>
										<then>
											<property name="app.dir" value="${project.basedir}"/>
											<taskdef name="BettyScriptWriterTask" classname="io.betty.ant.tools.BettyScriptExportTask" classpath="${project.build.directory}/classes:${io.betty:betty-common:jar}"/>
															
											<BettyScriptWriterTask basedir="${app.dir}" appname="${project.name}" version="${project.version}" jvmargs="${java.jvm.args}" appargs="${java.app.args}"/>
										</then>
									</if>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
				  <artifactId>maven-source-plugin</artifactId>
				  <version>3.0.1</version>
				  <!-- Eclipse-related OSGi manifests
				       See https://github.com/netty/netty/issues/3886
				       More information: http://rajakannappan.blogspot.ie/2010/03/automating-eclipse-source-bundle.html -->
				  <configuration>
				    <archive>
				      <manifestEntries>
				        <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
				        <Bundle-Name>${project.name}</Bundle-Name>
				        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}.source</Bundle-SymbolicName>
				      </manifestEntries>
				    </archive>
				  </configuration>
				
				  <executions>
				    <!--
				      ~ This workaround prevents Maven from executing the 'generate-sources' phase twice.
				      ~ See http://jira.codehaus.org/browse/MSOURCES-13
				      ~ and http://blog.peterlynch.ca/2010/05/maven-how-to-prevent-generate-sources.html
				      -->
				    <execution>
				      <id>attach-sources</id>
				      <phase>invalid</phase>
				      <goals>
				        <goal>jar</goal>
				      </goals>
				    </execution>
				    <execution>
				      <id>attach-sources-no-fork</id>
				      <phase>package</phase>
				      <goals>
				        <goal>jar-no-fork</goal>
				      </goals>
				    </execution>
				  </executions>
				</plugin>
				<plugin>
				  <artifactId>maven-compiler-plugin</artifactId>
				  <version>3.6.0</version>
				  <configuration>
				    <compilerVersion>1.8</compilerVersion>
				    <fork>true</fork>
				    <source>${maven.compiler.source}</source>
				    <target>${maven.compiler.target}</target>
				    <debug>true</debug>
				    <optimize>true</optimize>
				    <showDeprecation>true</showDeprecation>
<!-- 				    <showWarnings>true</showWarnings> -->
				    <compilerArgument>-Xlint:unchecked</compilerArgument>
				    <meminitial>256m</meminitial>
				    <maxmem>1024m</maxmem>
				    <excludes>
				      <exclude>**/package-info.java</exclude>
				    </excludes>
				  </configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.0</version>
					<configuration>
						<skipTests>${skipTests}</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>